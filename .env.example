# ChatApp Services Configuration Example
# Copy this file to .env and update with your actual credentials

# =============================================================================
# DYNATRACE / OTEL CONFIGURATION
# =============================================================================
# Enable or disable Dynatrace forwarding/integration
DYNATRACE_ENABLED=true

# Dynatrace tenant URL (example): https://your-tenant.dynatrace.com/
DYNATRACE_URL=https://your-tenant.dynatrace.com/

# Dynatrace API token (keep secret) - used when DYNATRACE_URL is set
DYNATRACE_API_TOKEN=your_dynatrace_api_token_here

# Dynatrace environment id (tenant short name)
DYNATRACE_ENVIRONMENT_ID=your_dynatrace_env_id

# Optional: HTTP timeout (seconds) for Dynatrace requests
DYNATRACE_TIMEOUT=10

# OpenTelemetry service name used when initializing tracing
OTEL_SERVICE_NAME=web-chatapp

# If you use OTLP exporter environment vars, include them here as examples
# OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318/v1/traces
# OTEL_EXPORTER_OTLP_HEADERS=Authorization=Bearer <token>

# =============================================================================
# DATABRICKS GENIE CONFIGURATION
# =============================================================================
# Databricks personal access token
DATABRICKS_TOKEN=your_databricks_personal_access_token_here

# Databricks Genie (space) id if used by your integrations
DATABRICKS_GENIE_ID=your_databricks_genie_id

# Databricks workspace URL
DATABRICKS_WORKSPACE_URL=https://your-workspace.databricks.com/

# =============================================================================
# SNOWFLAKE CORTEX CONFIGURATION
# =============================================================================
# Snowflake connection URL (if applicable)
SNOWFLAKE_URL=https://your-account.snowflakecomputing.com

# Snowflake username (if using username/password auth)
SNOWFLAKE_USER=your_snowflake_user

# Snowflake password (if using username/password auth)
# SNOWFLAKE_PASSWORD=your_password_here

# Snowflake account identifier (e.g., org-account)
SNOWFLAKE_ACCOUNT=your_snowflake_account_identifier

# Option: OAuth/temporary token instead of username/password
SNOWFLAKE_TOKEN=your_snowflake_oauth_token_here

# Optional Snowflake defaults
SNOWFLAKE_WAREHOUSE=your_warehouse_name
SNOWFLAKE_DATABASE=your_database_name
SNOWFLAKE_SCHEMA=PUBLIC

# =============================================================================
# LOGGING / APP CONFIG
# =============================================================================
# Set log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Generic application flags
# DEBUG=true

# =============================================================================
# USAGE INSTRUCTIONS
# =============================================================================
# 1. Copy this file to the project root as .env:
#    cp tools/services.env.example .env
# 2. Replace placeholders above with real values. DO NOT commit secrets to git.
# 3. Start the app (python-dotenv will be loaded by main.py if present):
#    python -m uvicorn main:app --reload

# =============================================================================
# AVAILABLE TOOLS (examples)
# =============================================================================
# Databricks Genie Tools:
# - databricks_start_conversation(space_id, content)
# - databricks_post_message(conversation_id, content, attachments?)
# - databricks_get_attachment(conversation_id, attachment_id)
# - databricks_list_spaces()

# Snowflake Cortex Tools:
# - snowflake_complete_text(model, prompt, max_tokens?, temperature?)
# - snowflake_analyze_sentiment(text)
# - snowflake_summarize_text(text)
# - snowflake_translate_text(text, from_language, to_language)
# - snowflake_execute_sql(sql, parameters?)
# - snowflake_generate_embeddings(model, text)

# Management Tools:
# - services_health_check()
# - services_list_tools()